{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "postgres: start",
      "type": "shell",
      "command": "docker",
      "args": [
        "run",
        "--name",
        "zabbix-postgres-debug",
        "-e",
        "POSTGRES_DB=zabbix_store",
        "-e",
        "POSTGRES_USER=postgres",
        "-e",
        "POSTGRES_PASSWORD=postgres123",
        "-p",
        "5432:5432",
        "-d",
        "postgres:15-alpine"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "postgres: stop",
      "type": "shell",
      "command": "docker",
      "args": [
        "stop",
        "zabbix-postgres-debug"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: remove",
      "type": "shell",
      "command": "docker",
      "args": [
        "rm",
        "-f",
        "zabbix-postgres-debug"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: wait",
      "type": "shell",
      "command": "cmd",
      "args": [
        "/c",
        "echo Aguardando PostgreSQL... && timeout /t 5 /nobreak > nul && docker exec zabbix-postgres-debug pg_isready -U postgres -h localhost -p 5432 && echo PostgreSQL esta pronto! || (echo PostgreSQL nao esta pronto, tentando novamente... && timeout /t 10 /nobreak > nul && docker exec zabbix-postgres-debug pg_isready -U postgres -h localhost -p 5432 && echo PostgreSQL esta pronto! || echo Falha ao conectar ao PostgreSQL)"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: wait-simple",
      "type": "shell",
      "command": "cmd",
      "args": [
        "/c",
        "ping -n 10 127.0.0.1 > nul && echo Aguardando PostgreSQL... && docker exec zabbix-postgres-debug pg_isready -U postgres -h localhost -p 5432 && echo PostgreSQL esta pronto! || echo PostgreSQL ainda nao esta pronto, mas continuando..."
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: check",
      "type": "shell",
      "command": "docker",
      "args": [
        "ps",
        "-q",
        "-f",
        "name=zabbix-postgres-debug"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: clean-start",
      "dependsOn": [
        "postgres: remove",
        "postgres: start"
      ],
      "dependsOrder": "sequence",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: wait",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "$maxAttempts = 30; $attempt = 0; Write-Host 'Aguardando PostgreSQL...'; while ($attempt -lt $maxAttempts) { try { $connection = New-Object System.Net.Sockets.TcpClient('localhost', 5432); if ($connection.Connected) { Write-Host 'PostgreSQL está pronto!'; exit 0 } } catch { Write-Host \"Tentativa $($attempt + 1)/$maxAttempts falhou, tentando novamente...\" } $connection.Close(); Start-Sleep -Seconds 2; $attempt++ }; Write-Host 'PostgreSQL não respondeu após $maxAttempts tentativas'; exit 1"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "postgres: start-compose",
      "type": "shell",
      "command": "docker-compose",
      "args": [
        "up",
        "-d",
        "postgres"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "isBackground": true
    },
    {
      "label": "postgres: wait-compose",
      "type": "shell",
      "command": "cmd",
      "args": [
        "/c",
        "timeout /t 15 /nobreak > nul && echo Aguardando PostgreSQL... && docker-compose exec -T postgres pg_isready -U postgres && echo PostgreSQL esta pronto!"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "backend: setup-compose",
      "dependsOn": [
        "postgres: start-compose",
        "postgres: wait-compose",
        "npm: install (backend)",
        "prisma: generate",
        "db: setup"
      ],
      "dependsOrder": "sequence",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "backend: setup",
      "dependsOn": [
        "postgres: clean-start",
        "postgres: wait",
        "npm: install (backend)",
        "prisma: generate",
        "db: setup"
      ],
      "dependsOrder": "sequence",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "npm: install (backend)",
      "type": "shell",
      "command": "npm",
      "args": ["install"],
      "options": {
        "cwd": "${workspaceFolder}/infrastructure/backend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "prisma: generate",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "generate"],
      "options": {
        "cwd": "${workspaceFolder}/infrastructure/backend",
        "env": {
          "DATABASE_URL": "postgresql://postgres:postgres123@localhost:5432/zabbix_store?schema=public"
        }
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "backend: setup-with-prisma",
      "dependsOn": [
        "postgres: clean-start",
        "postgres: wait",
        "prisma-studio: start",
        "prisma-studio: wait",
        "npm: install (backend)",
        "prisma: generate",
        "db: setup"
      ],
      "dependsOrder": "sequence",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "prisma-studio: start",
      "type": "shell",
      "command": "docker-compose",
      "args": [
        "up",
        "-d",
        "postgres",
        "prisma-studio"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "prisma-studio: wait",
      "type": "shell",
      "command": "cmd",
      "args": [
        "/c",
        "timeout /t 10 /nobreak > nul && echo Aguardando Prisma Studio ficar pronto..."
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "db: setup",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "db", "push"],
      "options": {
        "cwd": "${workspaceFolder}/infrastructure/backend",
        "env": {
          "DATABASE_URL": "postgresql://postgres:postgres123@localhost:5432/zabbix_store?schema=public"
        }
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "docker-compose: debug-setup",
      "dependsOn": [
        "docker-compose: build",
        "docker-compose: up",
        "prisma-studio: wait"
      ],
      "dependsOrder": "sequence",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "prisma-studio: wait",
      "type": "shell",
      "command": "cmd",
      "args": [
        "/c",
        "timeout /t 10 /nobreak > nul && echo Aguardando Prisma Studio..."
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "prisma-studio: stop",
      "type": "shell",
      "command": "docker-compose",
      "args": [
        "down",
        "postgres",
        "prisma-studio"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "docker-compose: build",
      "type": "shell",
      "command": "docker-compose",
      "args": ["build"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": "$docker-compose"
    },
    {
      "label": "docker-compose: up",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "-d"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "isBackground": true
    },
    {
      "label": "docker-compose: down",
      "type": "shell",
      "command": "docker-compose",
      "args": ["down"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "docker-compose: logs",
      "type": "shell",
      "command": "docker-compose",
      "args": ["logs", "-f"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "isBackground": true
    },
    {
      "label": "docker-compose: restart",
      "type": "shell",
      "command": "docker-compose",
      "args": ["restart"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "docker-compose: build and up",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "--build", "-d"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "isBackground": true
    },
    {
      "label": "docker-compose: clean",
      "type": "shell",
      "command": "docker-compose",
      "args": ["down", "-v", "--rmi", "all"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "docker-compose: status",
      "type": "shell",
      "command": "docker-compose",
      "args": ["ps"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    }
  ]
}