services:
  postgres:
    image: postgres:15-alpine
    container_name: store-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - store-network

  backend:
    build:
      context: ./infrastructure/backend
      dockerfile: Dockerfile
    container_name: store-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${BACKEND_PORT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
      NODE_OPTIONS: --inspect=0.0.0.0:9229
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
      - "9229:9229"
    depends_on:
      - postgres
    networks:
      - store-network
    volumes:
      - ./infrastructure/backend/prisma:/app/prisma
  frontend:
    build:
      context: ./infrastructure/frontend
      dockerfile: Dockerfile
    container_name: store-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:${BACKEND_PORT}
      VITE_VIACEP_API_URL: https://viacep.com.br/ws
      VITE_CONTACT_EMAIL: ${VITE_CONTACT_EMAIL}
      VITE_GITHUB_REPOSITORY_URL: ${VITE_GITHUB_REPOSITORY_URL}
      VITE_TOAST_AUTOCLOSE_DURATION: ${VITE_TOAST_AUTOCLOSE_DURATION:-3000}
      VITE_SEARCH_DEBOUNCE_MS: ${VITE_SEARCH_DEBOUNCE_MS:-500}
      VITE_CEP_FETCH_DELAY_MS: ${VITE_CEP_FETCH_DELAY_MS:-500}
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    networks:
      - store-network

  prisma-studio:
    image: node:18-alpine
    container_name: store-prisma-studio
    restart: unless-stopped
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
    ports:
      - "${PRISMA_STUDIO_PORT}:5555"
    depends_on:
      - postgres
    networks:
      - store-network
    volumes:
      - ./infrastructure/backend:/app
    command: sh -c "npm install -g prisma && npx prisma studio --hostname 0.0.0.0"

volumes:
  postgres_data:

networks:
  store-network:
    driver: bridge